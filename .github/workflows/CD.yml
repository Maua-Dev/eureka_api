name: Django CD

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - deploy-eureka

jobs:
  DeployToAWS:
    environment: 
      name: dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
        - uses: actions/checkout@v3
        - name: Setup AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-region: sa-east-1
            role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubActionsRole
            role-session-name: github-action

        - name: Setting stage and stack name
          run: |
              STAGE=dev 
              PROJECT_NAME=Eureka2024
              echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
              echo "STACK_NAME=${PROJECT_NAME}Stack${STAGE}" >> $GITHUB_ENV

        - uses: actions/setup-python@v4
          with:
            python-version: '3.11'
    
        - name: Installing Dependencies to Deploy
          run: |
            npm install -g aws-cdk
            cd iac
            pip install -r requirements.txt

        - name: Setup env
          run: |
            echo AWS_REGION=${{ vars.AWS_REGION }} >> $GITHUB_ENV
            echo AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} >> $GITHUB_ENV
            echo GITHUB_REF_NAME=${{ github.ref_name }} >> $GITHUB_ENV
            

            echo ${{ env.AWS_REGION }}
            echo ${{ env.AWS_ACCOUNT_ID }}
            echo ${{ env.STACK_NAME }}
            echo ${{ env.GITHUB_REF_NAME }}

        - name: Deploy with CDK
          run: |
            cd iac
            cdk synth
            cdk deploy --require-approval never 

        - name: Get ECR URI
          run: |
            ECR_REPOSITORY_URI=$(aws cloudformation --region ${{vars.AWS_REGION}} describe-stacks --stack-name ${{env.STACK_NAME}} --query "Stacks[0].Outputs[?OutputKey=='EcrRepositoryArn'].OutputValue" --output text)
            echo "ECR_REPOSITORY_URI=${ECR_REPOSITORY_URI}" >> $GITHUB_ENV

        - name: Build and Push Docker Image
          run: |
            aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 264055331071.dkr.ecr.sa-east-1.amazonaws.com
            docker build -t ${{env.ECR_REPOSITORY_URI}} .
            docker push ${{env.ECR_REPOSITORY_URI}}
